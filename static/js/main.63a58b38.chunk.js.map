{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["LIKE_MOVIE","gql","Container","styled","div","Poster","props","bg","id","isLiked","useMutation","variables","parseInt","toggleMovie","to","onClick","GET_MOVIES","Header","header","Title","h1","Subtitle","h3","Loading","Movies","useQuery","loading","data","movies","map","m","Movie","key","medium_cover_image","GET_MOVIE","Column","h4","Description","p","useParams","movie","title","language","rating","description_intro","App","exact","path","component","Home","Detail","client","ApolloClient","uri","resolvers","Mutation","toggleLikeMovie","_","cache","writeData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63a58b38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nconst LIKE_MOVIE = gql`\r\n\tmutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n\t\ttoggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n\t}\r\n`;\r\n\r\nconst Container = styled.div`\r\n\theight: 400px;\r\n\tborder-radius: 7px;\r\n\twidth: 100%;\r\n\tbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n\tbackground-color: transparent;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n\tbackground-image: url(${props => props.bg});\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tbackground-size: cover;\r\n\tbackground-position: center center;\r\n\tborder-radius: 7px;\r\n`;\r\n\r\nexport default ({ id, bg, isLiked }) => {\r\n\tconst [toggleMovie] = useMutation(LIKE_MOVIE, {\r\n\t\tvariables: { id: parseInt(id), isLiked }\r\n\t});\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to={`/${id}`}>\r\n\t\t\t\t<Poster bg={bg} />\r\n\t\t\t</Link>\r\n\t\t\t<button onClick={toggleMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nconst GET_MOVIES = gql`\r\n\t{\r\n\t\tmovies {\r\n\t\t\tid\r\n\t\t\tmedium_cover_image\r\n\t\t\tisLiked @client\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst Header = styled.header`\r\n\tbackground-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n\theight: 45vh;\r\n\tcolor: white;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n\tfont-size: 60px;\r\n\tfont-weight: 600;\r\n\tmargin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n\tfont-size: 35px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n\tfont-size: 18px;\r\n\topacity: 0.5;\r\n\tfont-weight: 500;\r\n\tmargin-top: 10px;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(4, 1fr);\r\n\tgrid-gap: 25px;\r\n\twidth: 60%;\r\n\tmin-width: 850px;\r\n\tposition: relative;\r\n\ttop: -50px;\r\n`;\r\n\r\nexport default () => {\r\n\tconst { loading, data } = useQuery(GET_MOVIES);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header>\r\n\t\t\t\t<Title>Apollo 2020</Title>\r\n\t\t\t\t<Subtitle>I love GraphQL</Subtitle>\r\n\t\t\t</Header>\r\n\t\t\t{loading && <Loading>Loading...</Loading>}\r\n\t\t\t<Movies>\r\n\t\t\t\t{data?.movies?.map(m => (\r\n\t\t\t\t\t<Movie\r\n\t\t\t\t\t\tkey={m.id}\r\n\t\t\t\t\t\tid={m.id}\r\n\t\t\t\t\t\tisLiked={m.isLiked}\r\n\t\t\t\t\t\tbg={m.medium_cover_image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Movies>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GET_MOVIE = gql`\r\n\tquery getMovie($id: Int!) {\r\n\t\tmovie(id: $id) {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\tmedium_cover_image\r\n\t\t\tlanguage\r\n\t\t\trating\r\n\t\t\tdescription_intro\r\n\t\t\tisLiked @client\r\n\t\t}\r\n\t\tsuggestions(id: $id) {\r\n\t\t\tid\r\n\t\t\tmedium_cover_image\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Container = styled.div`\r\n\theight: 100vh;\r\n\tbackground-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\tcolor: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n\tmargin-left: 10px;\r\n\twidth: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n\tfont-size: 55px;\r\n\tmargin-bottom: 10px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n\tfont-size: 25px;\r\n\tmargin-bottom: 30px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n\tfont-size: 22px;\r\n\tline-height: 1.3;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n\twidth: 25%;\r\n\theight: 60%;\r\n\tbackground-color: transparent;\r\n\tbackground-image: url(${props => props.bg});\r\n\tbackground-size: cover;\r\n\tbackground-position: center center;\r\n`;\r\n\r\nexport default () => {\r\n\tlet { id } = useParams();\r\n\tid = parseInt(id);\r\n\r\n\tconst { loading, data } = useQuery(GET_MOVIE, {\r\n\t\tvariables: { id }\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Column>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t{loading\r\n\t\t\t\t\t\t? \"Loading...\"\r\n\t\t\t\t\t\t: `${data.movie.title} / ${\r\n\t\t\t\t\t\t\t\tdata.movie.isLiked ? \"OK\" : \"NO\"\r\n\t\t\t\t\t\t  }`}\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Subtitle>\r\n\t\t\t\t\t{data?.movie?.language} Â· {data?.movie?.rating}\r\n\t\t\t\t</Subtitle>\r\n\t\t\t\t<Description>{data?.movie?.description_intro}</Description>\r\n\t\t\t</Column>\r\n\t\t\t<Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route path=\"/:id\" component={Detail} />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n\turi: \"http://localhost:4000/\",\r\n\tresolvers: {\r\n\t\tMovie: {\r\n\t\t\tisLiked: () => false\r\n\t\t},\r\n\t\tMutation: {\r\n\t\t\ttoggleLikeMovie: (_, { id, isLiked }, { cache }) => {\r\n\t\t\t\tcache.writeData({\r\n\t\t\t\t\tid: `Movie:${id}`,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tisLiked: !isLiked\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from \"./apollo\";\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}